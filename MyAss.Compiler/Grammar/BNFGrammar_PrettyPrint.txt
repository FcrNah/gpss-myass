
BNF syntax description:
(...)	- grouping
[...]	- optional item
(...)*	- items repeating 0 or more times
(...)+	- items repeating 1 or more times
|		- choice operator

Parser grammar:
<linefeed> :: = [ <COMMENT> | <WHITE> ] <LF>
<model> ::= ( <linefeed hujnja> )* <directives> <verbs> <EOF>
  <directives> :: = ( <directive> ( <linefeed> )+ )* 
    <directive> ::= <ATSIGN> <directiveid> <directiveparam>
      <directiveid> ::= <USING> | <USINGP>
      <directiveparam> ::= <QUAL-ID>
  <verbs> ::= ( <verb> ( <linefeed> )+ )*
  <verb> ::= [ <ID> ] <ID> [ <operands> ]
    <operands> ::= <operand> ( <COMMA> <operand> )*
    <operand> ::= [ <expression> | <parexpression> ]
    <parexpression> ::= <LPAR> <expression> <RPAR>
    <expression> ::= <term> ( <addop> <term> )*
      <addop> ::= <PLUS> | <MINUS>
      <term> ::= <signedfactor> ( <mulop> <factor> )*
        <mulop> ::= <OCTOTHORPE> | <FWDSLASH> | <BCKSLASH> | <CARRET>
        <signedfactor> ::= [ <addop> ] <factor>
          <factor> ::= <literal> | <call> | <LPAR> <expression> <RPAR>
            <call> ::= <lval> | <procedurecall> | <snacall>
              <lval> ::= <ID>
              <directsna> ::= <ID> <DOLLAR> <ID>
              <call> ::= <ID> <LPAR> <actuals> <RPAR>
                <actuals> ::= [ <expression> ( <COMMA> <expression> )* ]
            <literal> ::= <NUMBER>


Token grammar:
<USING> ::= "using"
<USINGP> ::= "usingp"

<PLUS> ::= '+'
<MINUS> ::= '-'
<OCTOTHORPE> ::= '#'
<FWDSLASH> ::= '/'
<BCKSLASH> ::= '\'
<CARRET> ::= '^'

<LPAR> ::= '('
<RPAR> ::= ')'
<DOLLAR> ::= '$'
<ASTERISK> ::= '*'
<COMMA> ::= ','
<ATSIGN> ::= '@'

<ILLEGAL>
<EOF> ::= '\0'
<LF> ::= '\r' | '\n'
<WHITE> ::= ' '
<COMMENT> ::= ';' ( <any-char> )*
  <any-char> ::= any character except '\r', '\n', '\0''

<NUMBER> ::= ( <digit> )+ [ "." ( <digit> )+ ]
<ID> ::= <letter> ( <letter> | <digit> | "_" )*
<QUAL-ID> ::= <letter> ( <letter> | <digit> | "_" | "." )*
  <letter> :=   "A" | "B" | "C" | "D" | "E" | "F" | "G"
      | "H" | "I" | "J" | "K" | "L" | "M" | "N"
      | "O" | "P" | "Q" | "R" | "S" | "T" | "U"
      | "V" | "W" | "X" | "Y" | "Z" 
      | "a" | "b" | "c" | "d" | "e" | "f" | "g"
      | "h" | "i" | "j" | "k" | "l" | "m" | "n"
      | "o" | "p" | "q" | "r" | "s" | "t" | "u"
      | "v" | "w" | "x" | "y" | "z"
  <digit> ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"


Starters:
<model> ::= ( [ <COMMENT> ] <LF> )+ <directives> <verbs> <EOF>
  <directives> :: = ( <directive> ( [ <COMMENT> ] <LF> )+ )* 
    <directive> ::= <ATSIGN> <directiveid> <directiveparam>
      <directiveid> ::= <USING> | <USINGP>
      <directiveparam> ::= <QUAL-ID>
  <verbs> ::= ( <verb> ( [ <COMMENT> ] <LF> )+ )+
  <verb> ::= [ <ID> ] <ID> [ <operands> ]
    <operands> ::= <operand> ( <COMMA> <operand> )*
    <operand> ::= "" | <expression> | <parexpression>
    <parexpression> ::= <LPAR> <expression> <RPAR>
    <expression> ::= <term> ( <additive> )*
      <additive> ::= <addop> <term>
      <addop> ::= <PLUS> | <MINUS>
      <term> ::= <signedfactor> ( <multiplicative> )*
        <multiplicative> ::= <mulop> <factor>
        <mulop> ::= <OCTOTHORPE> | <FWDSLASH> | <BCKSLASH> | <CARRET>
        <signedfactor> ::= [ <addop> ] <factor>
          <factor> ::= <literal> | <lval> | <LPAR> <expression> <RPAR>
            <lval> ::= <ID> [ <accessor> ]
              <accessor> ::= <call> | <directsna>
              <directsna> ::= <DOLLAR> <ID>
              <call> ::= <LPAR> <actuals> <RPAR>
                <actuals> : ID | NUMERIC | LPAR
            <literal> : NUMERIC