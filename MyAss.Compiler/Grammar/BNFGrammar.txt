
Rules of Thumb:
1. There is no difference between command and block right now, all are verbs;
2. Verb operator (if exits) is first operand;
3. Operands separated by Comma or Whitespace char;
	3.1 Despite of it spaces can be used inside parenthesized expressions, 
		'cos whitespaces are ignored inside parexpressions;
4. Suffix logic (Assign/Savevalue) fubars current grammatics, is not supported;
5. Issue with optional label solved with verb name lookup in Framework metadata;

<model> ::= { <verb> [ COMMENT ] "\r\n" }+

	<verb> ::= [ ID ] ID [ <operands> ]

		<operands> ::= <operand> { "," <operand> }

		<operand> ::= "" | <expression> | <parexpression>

		<parexpression> ::= "(" <expression> ")"

		<expression> ::= <term> { <additive> }

			<additive> ::= <addop> <term>

			<addop> ::= "+" | "-"

			<term> ::= <signedfactor> { <multiplicative> }

				<multiplicative> ::= <mulop> <factor>

				<mulop> ::= "#" | "/" | "\" | "^"
 
				<signedfactor> ::= [ <addop> ] <factor>

					<factor> ::= <literal> | <lval> | "(" <expression> ")"

						<lval> ::= ID [ <accessor> ]

							<accessor> ::= <call> | <directsna>

							<call> ::= "(" <actuals> ")"

								<actuals> ::= "" | <expression> { "," <expression> }

							<directsna> ::= "$" ID

						<literal> ::= INT | DOUBLE | STRING


ID Types:
- Label
- VerbName
- Entity Instance Name
- Method (or SNA)